import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import Camera from '../components/camera/Camera'
import GLCanvas from '../components/webgl/GLCanvas'
import { Component, useEffect, useRef, useState } from 'react'
import { render } from 'react-dom'

function getWindowDimensions() {
  const { innerWidth: width, innerHeight: height } = window;
  return {
    width,
    height
  };
}

const Home: NextPage = () => {
  const backgroundRef = useRef<HTMLVideoElement>();
  const [renderReady, setRenderReady] = useState(false);
  const [asspectRatio, setAspectRatio] = useState(1);
  const [windowSize, setWindowSize] = useState<{width: number, height: number}>();
  const setBackground = (video: HTMLVideoElement) => backgroundRef.current = video;
  const [heightAdjust, setHeightAdjust] = useState(0.8);

  useEffect(() => {
    if (backgroundRef.current) {
      setRenderReady(true);
    }
  }, [backgroundRef]);

  useEffect(() => {
    function handleResize() {
      setWindowSize(getWindowDimensions());
    }

    setWindowSize(getWindowDimensions());

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  const canvas = () : JSX.Element | null => {
      if (windowSize === undefined || windowSize.height == 0) {
        console.log(windowSize?.height);
        return null;
      }
      let height = windowSize.height*heightAdjust;
      let width = windowSize.height*heightAdjust*asspectRatio;
      let background = backgroundRef.current ?? null;
      return <GLCanvas height={height} width={width} background={background}></GLCanvas>
  }

  return (
    <div>
      <Head>
        <title>CloudAR</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className={styles.title}>CloudAR</h1>

        <div style={{ height: '80vh', width: '100vw', backgroundColor: 'black' }}>
          <Camera setRef={setBackground} setAsspectRatio={setAspectRatio}></Camera>
          {renderReady ? canvas() : null}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
